                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.0 #14184 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module mpu6050
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _segmentMap
                                     12 	.globl _main
                                     13 	.globl _getMPU6050
                                     14 	.globl _initMPU6050
                                     15 	.globl _tm1637DisplayDecimal
                                     16 	.globl _tm1637Init
                                     17 	.globl _InitializeUART
                                     18 	.globl _InitializeI2C
                                     19 	.globl _i2c_read_register
                                     20 	.globl _print_byte_hex
                                     21 	.globl _i2c_set_start_ack
                                     22 	.globl _i2c_send_address
                                     23 	.globl _UARTPrintF
                                     24 	.globl _i2c_send_reg
                                     25 	.globl _i2c_set_stop
                                     26 	.globl _i2c_set_nak
                                     27 	.globl _i2c_read
                                     28 	.globl _delay
                                     29 	.globl _InitializeSystemClock
                                     30 	.globl _delayTenMicro
                                     31 	.globl _tm1637SetBrightness
                                     32 	.globl __tm1637Start
                                     33 	.globl __tm1637Stop
                                     34 	.globl __tm1637ReadResult
                                     35 	.globl __tm1637WriteByte
                                     36 	.globl __tm1637ClkHigh
                                     37 	.globl __tm1637ClkLow
                                     38 	.globl __tm1637DioHigh
                                     39 	.globl __tm1637DioLow
                                     40 ;--------------------------------------------------------
                                     41 ; ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area DATA
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area INITIALIZED
                                     48 ;--------------------------------------------------------
                                     49 ; Stack segment in internal ram
                                     50 ;--------------------------------------------------------
                                     51 	.area SSEG
      000001                         52 __start__stack:
      000001                         53 	.ds	1
                                     54 
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area DABS (ABS)
                                     59 
                                     60 ; default segment ordering for linker
                                     61 	.area HOME
                                     62 	.area GSINIT
                                     63 	.area GSFINAL
                                     64 	.area CONST
                                     65 	.area INITIALIZER
                                     66 	.area CODE
                                     67 
                                     68 ;--------------------------------------------------------
                                     69 ; interrupt vector
                                     70 ;--------------------------------------------------------
                                     71 	.area HOME
      008000                         72 __interrupt_vect:
      008000 82 00 80 07             73 	int s_GSINIT ; reset
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME
                                     78 	.area GSINIT
                                     79 	.area GSFINAL
                                     80 	.area GSINIT
      008007 CD 88 D1         [ 4]   81 	call	___sdcc_external_startup
      00800A 4D               [ 1]   82 	tnz	a
      00800B 27 03            [ 1]   83 	jreq	__sdcc_init_data
      00800D CC 80 04         [ 2]   84 	jp	__sdcc_program_startup
      008010                         85 __sdcc_init_data:
                                     86 ; stm8_genXINIT() start
      008010 AE 00 00         [ 2]   87 	ldw x, #l_DATA
      008013 27 07            [ 1]   88 	jreq	00002$
      008015                         89 00001$:
      008015 72 4F 00 00      [ 1]   90 	clr (s_DATA - 1, x)
      008019 5A               [ 2]   91 	decw x
      00801A 26 F9            [ 1]   92 	jrne	00001$
      00801C                         93 00002$:
      00801C AE 00 00         [ 2]   94 	ldw	x, #l_INITIALIZER
      00801F 27 09            [ 1]   95 	jreq	00004$
      008021                         96 00003$:
      008021 D6 80 7F         [ 1]   97 	ld	a, (s_INITIALIZER - 1, x)
      008024 D7 00 00         [ 1]   98 	ld	(s_INITIALIZED - 1, x), a
      008027 5A               [ 2]   99 	decw	x
      008028 26 F7            [ 1]  100 	jrne	00003$
      00802A                        101 00004$:
                                    102 ; stm8_genXINIT() end
                                    103 	.area GSFINAL
      00802A CC 80 04         [ 2]  104 	jp	__sdcc_program_startup
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME
                                    109 	.area HOME
      008004                        110 __sdcc_program_startup:
      008004 CC 84 70         [ 2]  111 	jp	_main
                                    112 ;	return from main will return to caller
                                    113 ;--------------------------------------------------------
                                    114 ; code
                                    115 ;--------------------------------------------------------
                                    116 	.area CODE
                                    117 ;	mpu6050.c: 17: void delayTenMicro (void) {
                                    118 ;	-----------------------------------------
                                    119 ;	 function delayTenMicro
                                    120 ;	-----------------------------------------
      008080                        121 _delayTenMicro:
                                    122 ;	mpu6050.c: 19: for (a = 0; a < 50; ++a)
      008080 A6 32            [ 1]  123 	ld	a, #0x32
      008082                        124 00104$:
                                    125 ;	mpu6050.c: 20: __asm__("nop");
      008082 9D               [ 1]  126 	nop
      008083 4A               [ 1]  127 	dec	a
                                    128 ;	mpu6050.c: 19: for (a = 0; a < 50; ++a)
      008084 4D               [ 1]  129 	tnz	a
      008085 26 FB            [ 1]  130 	jrne	00104$
                                    131 ;	mpu6050.c: 21: }
      008087 81               [ 4]  132 	ret
                                    133 ;	mpu6050.c: 23: void InitializeSystemClock() {
                                    134 ;	-----------------------------------------
                                    135 ;	 function InitializeSystemClock
                                    136 ;	-----------------------------------------
      008088                        137 _InitializeSystemClock:
                                    138 ;	mpu6050.c: 24: CLK_ICKR = 0;                       //  Reset the Internal Clock Register.
      008088 35 00 50 C0      [ 1]  139 	mov	0x50c0+0, #0x00
                                    140 ;	mpu6050.c: 25: CLK_ICKR = CLK_HSIEN;               //  Enable the HSI.
      00808C 35 01 50 C0      [ 1]  141 	mov	0x50c0+0, #0x01
                                    142 ;	mpu6050.c: 26: CLK_ECKR = 0;                       //  Disable the external clock.
      008090 35 00 50 C1      [ 1]  143 	mov	0x50c1+0, #0x00
                                    144 ;	mpu6050.c: 27: while ((CLK_ICKR & CLK_HSIRDY) == 0);       //  Wait for the HSI to be ready for use.
      008094                        145 00101$:
      008094 72 03 50 C0 FB   [ 2]  146 	btjf	0x50c0, #1, 00101$
                                    147 ;	mpu6050.c: 28: CLK_CKDIVR = 0;                     //  Ensure the clocks are running at full speed.
      008099 35 00 50 C6      [ 1]  148 	mov	0x50c6+0, #0x00
                                    149 ;	mpu6050.c: 29: CLK_PCKENR1 = 0xff;                 //  Enable all peripheral clocks.
      00809D 35 FF 50 C7      [ 1]  150 	mov	0x50c7+0, #0xff
                                    151 ;	mpu6050.c: 30: CLK_PCKENR2 = 0xff;                 //  Ditto.
      0080A1 35 FF 50 CA      [ 1]  152 	mov	0x50ca+0, #0xff
                                    153 ;	mpu6050.c: 31: CLK_CCOR = 0;                       //  Turn off CCO.
      0080A5 35 00 50 C9      [ 1]  154 	mov	0x50c9+0, #0x00
                                    155 ;	mpu6050.c: 32: CLK_HSITRIMR = 0;                   //  Turn off any HSIU trimming.
      0080A9 35 00 50 CC      [ 1]  156 	mov	0x50cc+0, #0x00
                                    157 ;	mpu6050.c: 33: CLK_SWIMCCR = 0;                    //  Set SWIM to run at clock / 2.
      0080AD 35 00 50 CD      [ 1]  158 	mov	0x50cd+0, #0x00
                                    159 ;	mpu6050.c: 34: CLK_SWR = 0xe1;                     //  Use HSI as the clock source.
      0080B1 35 E1 50 C4      [ 1]  160 	mov	0x50c4+0, #0xe1
                                    161 ;	mpu6050.c: 35: CLK_SWCR = 0;                       //  Reset the clock switch control register.
      0080B5 35 00 50 C5      [ 1]  162 	mov	0x50c5+0, #0x00
                                    163 ;	mpu6050.c: 36: CLK_SWCR = CLK_SWEN;                //  Enable switching.
      0080B9 35 02 50 C5      [ 1]  164 	mov	0x50c5+0, #0x02
                                    165 ;	mpu6050.c: 37: while ((CLK_SWCR & CLK_SWBSY) != 0);        //  Pause while the clock switch is busy.
      0080BD                        166 00104$:
      0080BD 72 00 50 C5 FB   [ 2]  167 	btjt	0x50c5, #0, 00104$
                                    168 ;	mpu6050.c: 38: }
      0080C2 81               [ 4]  169 	ret
                                    170 ;	mpu6050.c: 39: void delay (int time_ms) {
                                    171 ;	-----------------------------------------
                                    172 ;	 function delay
                                    173 ;	-----------------------------------------
      0080C3                        174 _delay:
      0080C3 52 0A            [ 2]  175 	sub	sp, #10
      0080C5 51               [ 1]  176 	exgw	x, y
                                    177 ;	mpu6050.c: 41: for (x = 0; x < 1036*time_ms; ++x)
      0080C6 5F               [ 1]  178 	clrw	x
      0080C7 1F 03            [ 2]  179 	ldw	(0x03, sp), x
      0080C9 1F 01            [ 2]  180 	ldw	(0x01, sp), x
      0080CB 90 89            [ 2]  181 	pushw	y
      0080CD AE 04 0C         [ 2]  182 	ldw	x, #0x040c
      0080D0 CD 86 7E         [ 4]  183 	call	__mulint
      0080D3 1F 05            [ 2]  184 	ldw	(0x05, sp), x
      0080D5                        185 00103$:
      0080D5 16 05            [ 2]  186 	ldw	y, (0x05, sp)
      0080D7 17 09            [ 2]  187 	ldw	(0x09, sp), y
      0080D9 7B 09            [ 1]  188 	ld	a, (0x09, sp)
      0080DB 49               [ 1]  189 	rlc	a
      0080DC 4F               [ 1]  190 	clr	a
      0080DD A2 00            [ 1]  191 	sbc	a, #0x00
      0080DF 6B 08            [ 1]  192 	ld	(0x08, sp), a
      0080E1 6B 07            [ 1]  193 	ld	(0x07, sp), a
      0080E3 1E 03            [ 2]  194 	ldw	x, (0x03, sp)
      0080E5 13 09            [ 2]  195 	cpw	x, (0x09, sp)
      0080E7 7B 02            [ 1]  196 	ld	a, (0x02, sp)
      0080E9 12 08            [ 1]  197 	sbc	a, (0x08, sp)
      0080EB 7B 01            [ 1]  198 	ld	a, (0x01, sp)
      0080ED 12 07            [ 1]  199 	sbc	a, (0x07, sp)
      0080EF 2E 12            [ 1]  200 	jrsge	00105$
                                    201 ;	mpu6050.c: 42: __asm__("nop");
      0080F1 9D               [ 1]  202 	nop
                                    203 ;	mpu6050.c: 41: for (x = 0; x < 1036*time_ms; ++x)
      0080F2 1E 03            [ 2]  204 	ldw	x, (0x03, sp)
      0080F4 1C 00 01         [ 2]  205 	addw	x, #0x0001
      0080F7 16 01            [ 2]  206 	ldw	y, (0x01, sp)
      0080F9 24 02            [ 1]  207 	jrnc	00118$
      0080FB 90 5C            [ 1]  208 	incw	y
      0080FD                        209 00118$:
      0080FD 1F 03            [ 2]  210 	ldw	(0x03, sp), x
      0080FF 17 01            [ 2]  211 	ldw	(0x01, sp), y
      008101 20 D2            [ 2]  212 	jra	00103$
      008103                        213 00105$:
                                    214 ;	mpu6050.c: 43: }
      008103 5B 0A            [ 2]  215 	addw	sp, #10
      008105 81               [ 4]  216 	ret
                                    217 ;	mpu6050.c: 44: void i2c_read (unsigned char *x) {
                                    218 ;	-----------------------------------------
                                    219 ;	 function i2c_read
                                    220 ;	-----------------------------------------
      008106                        221 _i2c_read:
                                    222 ;	mpu6050.c: 45: while ((I2C_SR1 & I2C_RXNE) == 0);
      008106                        223 00101$:
      008106 72 0D 52 17 FB   [ 2]  224 	btjf	0x5217, #6, 00101$
                                    225 ;	mpu6050.c: 46: *x = I2C_DR;
      00810B C6 52 16         [ 1]  226 	ld	a, 0x5216
      00810E F7               [ 1]  227 	ld	(x), a
                                    228 ;	mpu6050.c: 47: }
      00810F 81               [ 4]  229 	ret
                                    230 ;	mpu6050.c: 48: void i2c_set_nak (void) {
                                    231 ;	-----------------------------------------
                                    232 ;	 function i2c_set_nak
                                    233 ;	-----------------------------------------
      008110                        234 _i2c_set_nak:
                                    235 ;	mpu6050.c: 49: I2C_CR2 &= ~I2C_ACK;
      008110 72 15 52 11      [ 1]  236 	bres	0x5211, #2
                                    237 ;	mpu6050.c: 50: }
      008114 81               [ 4]  238 	ret
                                    239 ;	mpu6050.c: 51: void i2c_set_stop (void) {
                                    240 ;	-----------------------------------------
                                    241 ;	 function i2c_set_stop
                                    242 ;	-----------------------------------------
      008115                        243 _i2c_set_stop:
                                    244 ;	mpu6050.c: 52: I2C_CR2 |= I2C_STOP;
      008115 72 12 52 11      [ 1]  245 	bset	0x5211, #1
                                    246 ;	mpu6050.c: 53: }
      008119 81               [ 4]  247 	ret
                                    248 ;	mpu6050.c: 54: void i2c_send_reg (UCHAR addr) {
                                    249 ;	-----------------------------------------
                                    250 ;	 function i2c_send_reg
                                    251 ;	-----------------------------------------
      00811A                        252 _i2c_send_reg:
      00811A 52 03            [ 2]  253 	sub	sp, #3
      00811C 6B 03            [ 1]  254 	ld	(0x03, sp), a
                                    255 ;	mpu6050.c: 56: reg = I2C_SR1;
      00811E C6 52 17         [ 1]  256 	ld	a, 0x5217
      008121 5F               [ 1]  257 	clrw	x
      008122 97               [ 1]  258 	ld	xl, a
      008123 1F 01            [ 2]  259 	ldw	(0x01, sp), x
                                    260 ;	mpu6050.c: 57: reg = I2C_SR3;
      008125 C6 52 19         [ 1]  261 	ld	a, 0x5219
      008128 5F               [ 1]  262 	clrw	x
      008129 97               [ 1]  263 	ld	xl, a
      00812A 1F 01            [ 2]  264 	ldw	(0x01, sp), x
                                    265 ;	mpu6050.c: 58: I2C_DR = addr;
      00812C AE 52 16         [ 2]  266 	ldw	x, #0x5216
      00812F 7B 03            [ 1]  267 	ld	a, (0x03, sp)
      008131 F7               [ 1]  268 	ld	(x), a
                                    269 ;	mpu6050.c: 59: while ((I2C_SR1 & I2C_TXE) == 0);
      008132                        270 00101$:
      008132 C6 52 17         [ 1]  271 	ld	a, 0x5217
      008135 2A FB            [ 1]  272 	jrpl	00101$
                                    273 ;	mpu6050.c: 60: }
      008137 5B 03            [ 2]  274 	addw	sp, #3
      008139 81               [ 4]  275 	ret
                                    276 ;	mpu6050.c: 63: void UARTPrintF (char *message) {
                                    277 ;	-----------------------------------------
                                    278 ;	 function UARTPrintF
                                    279 ;	-----------------------------------------
      00813A                        280 _UARTPrintF:
                                    281 ;	mpu6050.c: 65: while (*ch) {
      00813A                        282 00104$:
      00813A F6               [ 1]  283 	ld	a, (x)
      00813B 26 01            [ 1]  284 	jrne	00130$
      00813D 81               [ 4]  285 	ret
      00813E                        286 00130$:
                                    287 ;	mpu6050.c: 66: UART1_DR = (unsigned char) *ch;     //  Put the next character into the data transmission register.
      00813E C7 52 31         [ 1]  288 	ld	0x5231, a
                                    289 ;	mpu6050.c: 67: while ((UART1_SR & SR_TXE) == 0);   //  Wait for transmission to complete.
      008141                        290 00101$:
      008141 C6 52 30         [ 1]  291 	ld	a, 0x5230
      008144 2A FB            [ 1]  292 	jrpl	00101$
                                    293 ;	mpu6050.c: 68: ch++;                               //  Grab the next character.
      008146 5C               [ 1]  294 	incw	x
      008147 20 F1            [ 2]  295 	jra	00104$
                                    296 ;	mpu6050.c: 70: }
      008149 81               [ 4]  297 	ret
                                    298 ;	mpu6050.c: 74: void i2c_send_address (UCHAR addr, UCHAR mode) {
                                    299 ;	-----------------------------------------
                                    300 ;	 function i2c_send_address
                                    301 ;	-----------------------------------------
      00814A                        302 _i2c_send_address:
      00814A 52 03            [ 2]  303 	sub	sp, #3
      00814C 97               [ 1]  304 	ld	xl, a
                                    305 ;	mpu6050.c: 76: reg = I2C_SR1;
      00814D C6 52 17         [ 1]  306 	ld	a, 0x5217
      008150 90 5F            [ 1]  307 	clrw	y
      008152 90 97            [ 1]  308 	ld	yl, a
      008154 17 01            [ 2]  309 	ldw	(0x01, sp), y
                                    310 ;	mpu6050.c: 77: I2C_DR = (addr << 1) | mode;
      008156 9F               [ 1]  311 	ld	a, xl
      008157 48               [ 1]  312 	sll	a
      008158 1A 06            [ 1]  313 	or	a, (0x06, sp)
      00815A C7 52 16         [ 1]  314 	ld	0x5216, a
                                    315 ;	mpu6050.c: 78: if (mode == I2C_READ) {
      00815D 7B 06            [ 1]  316 	ld	a, (0x06, sp)
      00815F 4A               [ 1]  317 	dec	a
      008160 26 05            [ 1]  318 	jrne	00131$
      008162 A6 01            [ 1]  319 	ld	a, #0x01
      008164 6B 03            [ 1]  320 	ld	(0x03, sp), a
      008166 C5                     321 	.byte 0xc5
      008167                        322 00131$:
      008167 0F 03            [ 1]  323 	clr	(0x03, sp)
      008169                        324 00132$:
      008169 0D 03            [ 1]  325 	tnz	(0x03, sp)
      00816B 27 08            [ 1]  326 	jreq	00103$
                                    327 ;	mpu6050.c: 79: I2C_OARL = 0;
      00816D 35 00 52 13      [ 1]  328 	mov	0x5213+0, #0x00
                                    329 ;	mpu6050.c: 80: I2C_OARH = 0;
      008171 35 00 52 14      [ 1]  330 	mov	0x5214+0, #0x00
                                    331 ;	mpu6050.c: 83: while ((I2C_SR1 & I2C_ADDR) == 0);
      008175                        332 00103$:
                                    333 ;	mpu6050.c: 76: reg = I2C_SR1;
      008175 C6 52 17         [ 1]  334 	ld	a, 0x5217
                                    335 ;	mpu6050.c: 83: while ((I2C_SR1 & I2C_ADDR) == 0);
      008178 A5 02            [ 1]  336 	bcp	a, #0x02
      00817A 27 F9            [ 1]  337 	jreq	00103$
                                    338 ;	mpu6050.c: 84: if (mode == I2C_READ)
      00817C 0D 03            [ 1]  339 	tnz	(0x03, sp)
      00817E 27 05            [ 1]  340 	jreq	00108$
                                    341 ;	mpu6050.c: 85: UNSET (I2C_SR1, I2C_ADDR);
      008180 A4 FD            [ 1]  342 	and	a, #0xfd
      008182 C7 52 17         [ 1]  343 	ld	0x5217, a
      008185                        344 00108$:
                                    345 ;	mpu6050.c: 86: }
      008185 5B 03            [ 2]  346 	addw	sp, #3
      008187 85               [ 2]  347 	popw	x
      008188 84               [ 1]  348 	pop	a
      008189 FC               [ 2]  349 	jp	(x)
                                    350 ;	mpu6050.c: 88: void i2c_set_start_ack (void) {
                                    351 ;	-----------------------------------------
                                    352 ;	 function i2c_set_start_ack
                                    353 ;	-----------------------------------------
      00818A                        354 _i2c_set_start_ack:
                                    355 ;	mpu6050.c: 89: I2C_CR2 = I2C_ACK | I2C_START;
      00818A 35 05 52 11      [ 1]  356 	mov	0x5211+0, #0x05
                                    357 ;	mpu6050.c: 90: while ((I2C_SR1 & I2C_SB) == 0);
      00818E                        358 00101$:
      00818E 72 01 52 17 FB   [ 2]  359 	btjf	0x5217, #0, 00101$
                                    360 ;	mpu6050.c: 91: }
      008193 81               [ 4]  361 	ret
                                    362 ;	mpu6050.c: 97: void print_byte_hex (unsigned char buffer) {
                                    363 ;	-----------------------------------------
                                    364 ;	 function print_byte_hex
                                    365 ;	-----------------------------------------
      008194                        366 _print_byte_hex:
      008194 52 0A            [ 2]  367 	sub	sp, #10
                                    368 ;	mpu6050.c: 100: a = (buffer >> 4);
      008196 97               [ 1]  369 	ld	xl, a
      008197 4E               [ 1]  370 	swap	a
      008198 A4 0F            [ 1]  371 	and	a, #0x0f
      00819A 41               [ 1]  372 	exg	a, xl
      00819B 02               [ 1]  373 	rlwa	x
      00819C 4F               [ 1]  374 	clr	a
      00819D 01               [ 1]  375 	rrwa	x
                                    376 ;	mpu6050.c: 101: if (a > 9)
      00819E A3 00 09         [ 2]  377 	cpw	x, #0x0009
      0081A1 2D 07            [ 1]  378 	jrsle	00102$
                                    379 ;	mpu6050.c: 102: a = a + 'a' - 10;
      0081A3 1C 00 57         [ 2]  380 	addw	x, #0x0057
      0081A6 1F 09            [ 2]  381 	ldw	(0x09, sp), x
      0081A8 20 05            [ 2]  382 	jra	00103$
      0081AA                        383 00102$:
                                    384 ;	mpu6050.c: 104: a += '0'; 
      0081AA 1C 00 30         [ 2]  385 	addw	x, #0x0030
      0081AD 1F 09            [ 2]  386 	ldw	(0x09, sp), x
      0081AF                        387 00103$:
                                    388 ;	mpu6050.c: 105: b = buffer & 0x0f;
      0081AF A4 0F            [ 1]  389 	and	a, #0x0f
      0081B1 97               [ 1]  390 	ld	xl, a
      0081B2 4F               [ 1]  391 	clr	a
      0081B3 95               [ 1]  392 	ld	xh, a
                                    393 ;	mpu6050.c: 106: if (b > 9)
      0081B4 A3 00 09         [ 2]  394 	cpw	x, #0x0009
      0081B7 2D 05            [ 1]  395 	jrsle	00105$
                                    396 ;	mpu6050.c: 107: b = b + 'a' - 10;
      0081B9 1C 00 57         [ 2]  397 	addw	x, #0x0057
      0081BC 20 03            [ 2]  398 	jra	00106$
      0081BE                        399 00105$:
                                    400 ;	mpu6050.c: 109: b += '0'; 
      0081BE 1C 00 30         [ 2]  401 	addw	x, #0x0030
      0081C1                        402 00106$:
                                    403 ;	mpu6050.c: 110: message[0] = a;
      0081C1 7B 0A            [ 1]  404 	ld	a, (0x0a, sp)
      0081C3 6B 01            [ 1]  405 	ld	(0x01, sp), a
                                    406 ;	mpu6050.c: 111: message[1] = b;
      0081C5 9F               [ 1]  407 	ld	a, xl
      0081C6 6B 02            [ 1]  408 	ld	(0x02, sp), a
                                    409 ;	mpu6050.c: 112: message[2] = 0;
      0081C8 0F 03            [ 1]  410 	clr	(0x03, sp)
                                    411 ;	mpu6050.c: 113: UARTPrintF (message);
      0081CA 96               [ 1]  412 	ldw	x, sp
      0081CB 5C               [ 1]  413 	incw	x
      0081CC CD 81 3A         [ 4]  414 	call	_UARTPrintF
                                    415 ;	mpu6050.c: 114: }
      0081CF 5B 0A            [ 2]  416 	addw	sp, #10
      0081D1 81               [ 4]  417 	ret
                                    418 ;	mpu6050.c: 117: unsigned char i2c_read_register (UCHAR addr, UCHAR rg) {
                                    419 ;	-----------------------------------------
                                    420 ;	 function i2c_read_register
                                    421 ;	-----------------------------------------
      0081D2                        422 _i2c_read_register:
      0081D2 52 03            [ 2]  423 	sub	sp, #3
      0081D4 6B 03            [ 1]  424 	ld	(0x03, sp), a
                                    425 ;	mpu6050.c: 120: i2c_set_start_ack ();
      0081D6 CD 81 8A         [ 4]  426 	call	_i2c_set_start_ack
                                    427 ;	mpu6050.c: 121: i2c_send_address (addr, I2C_WRITE);
      0081D9 4B 00            [ 1]  428 	push	#0x00
      0081DB 7B 04            [ 1]  429 	ld	a, (0x04, sp)
      0081DD CD 81 4A         [ 4]  430 	call	_i2c_send_address
                                    431 ;	mpu6050.c: 122: i2c_send_reg (rg);
      0081E0 7B 06            [ 1]  432 	ld	a, (0x06, sp)
      0081E2 CD 81 1A         [ 4]  433 	call	_i2c_send_reg
                                    434 ;	mpu6050.c: 123: i2c_set_start_ack ();
      0081E5 CD 81 8A         [ 4]  435 	call	_i2c_set_start_ack
                                    436 ;	mpu6050.c: 124: i2c_send_address (addr, I2C_READ);
      0081E8 4B 01            [ 1]  437 	push	#0x01
      0081EA 7B 04            [ 1]  438 	ld	a, (0x04, sp)
      0081EC CD 81 4A         [ 4]  439 	call	_i2c_send_address
                                    440 ;	mpu6050.c: 125: reg = I2C_SR1;
      0081EF C6 52 17         [ 1]  441 	ld	a, 0x5217
      0081F2 6B 01            [ 1]  442 	ld	(0x01, sp), a
                                    443 ;	mpu6050.c: 126: reg = I2C_SR3;
      0081F4 C6 52 19         [ 1]  444 	ld	a, 0x5219
      0081F7 6B 01            [ 1]  445 	ld	(0x01, sp), a
                                    446 ;	mpu6050.c: 127: i2c_set_nak ();
      0081F9 CD 81 10         [ 4]  447 	call	_i2c_set_nak
                                    448 ;	mpu6050.c: 128: i2c_set_stop ();
      0081FC CD 81 15         [ 4]  449 	call	_i2c_set_stop
                                    450 ;	mpu6050.c: 129: i2c_read (&x);
      0081FF 96               [ 1]  451 	ldw	x, sp
      008200 5C               [ 1]  452 	incw	x
      008201 5C               [ 1]  453 	incw	x
      008202 CD 81 06         [ 4]  454 	call	_i2c_read
                                    455 ;	mpu6050.c: 130: return (x);
      008205 7B 02            [ 1]  456 	ld	a, (0x02, sp)
                                    457 ;	mpu6050.c: 131: }
      008207 5B 03            [ 2]  458 	addw	sp, #3
      008209 85               [ 2]  459 	popw	x
      00820A 5B 01            [ 2]  460 	addw	sp, #1
      00820C FC               [ 2]  461 	jp	(x)
                                    462 ;	mpu6050.c: 133: void InitializeI2C (void) {
                                    463 ;	-----------------------------------------
                                    464 ;	 function InitializeI2C
                                    465 ;	-----------------------------------------
      00820D                        466 _InitializeI2C:
                                    467 ;	mpu6050.c: 134: I2C_CR1 = 0;   //  Disable I2C before configuration starts. PE bit is bit 0
      00820D 35 00 52 10      [ 1]  468 	mov	0x5210+0, #0x00
                                    469 ;	mpu6050.c: 138: I2C_FREQR = 16;                     //  Set the internal clock frequency (MHz).
      008211 35 10 52 12      [ 1]  470 	mov	0x5212+0, #0x10
                                    471 ;	mpu6050.c: 139: UNSET (I2C_CCRH, I2C_FS);           //  I2C running is standard mode.
      008215 72 1F 52 1C      [ 1]  472 	bres	0x521c, #7
                                    473 ;	mpu6050.c: 141: I2C_CCRL = 0xa0;                    //  SCL clock speed is 50 kHz.
      008219 35 A0 52 1B      [ 1]  474 	mov	0x521b+0, #0xa0
                                    475 ;	mpu6050.c: 143: I2C_CCRH &= 0x00;	// Clears lower 4 bits "CCR"
      00821D 35 00 52 1C      [ 1]  476 	mov	0x521c+0, #0x00
                                    477 ;	mpu6050.c: 147: UNSET (I2C_OARH, I2C_ADDMODE);      //  7 bit address mode.
      008221 C6 52 14         [ 1]  478 	ld	a, 0x5214
      008224 A4 7F            [ 1]  479 	and	a, #0x7f
                                    480 ;	mpu6050.c: 148: SET (I2C_OARH, I2C_ADDCONF);        //  Docs say this must always be 1.
      008226 C7 52 14         [ 1]  481 	ld	0x5214, a
      008229 AA 40            [ 1]  482 	or	a, #0x40
      00822B C7 52 14         [ 1]  483 	ld	0x5214, a
                                    484 ;	mpu6050.c: 152: I2C_TRISER = 17;
      00822E 35 11 52 1D      [ 1]  485 	mov	0x521d+0, #0x11
                                    486 ;	mpu6050.c: 160: I2C_CR1 = I2C_PE;	// Enables port
      008232 35 01 52 10      [ 1]  487 	mov	0x5210+0, #0x01
                                    488 ;	mpu6050.c: 164: }
      008236 81               [ 4]  489 	ret
                                    490 ;	mpu6050.c: 166: void InitializeUART() {
                                    491 ;	-----------------------------------------
                                    492 ;	 function InitializeUART
                                    493 ;	-----------------------------------------
      008237                        494 _InitializeUART:
                                    495 ;	mpu6050.c: 176: UART1_CR1 = 0;
      008237 35 00 52 34      [ 1]  496 	mov	0x5234+0, #0x00
                                    497 ;	mpu6050.c: 177: UART1_CR2 = 0;
      00823B 35 00 52 35      [ 1]  498 	mov	0x5235+0, #0x00
                                    499 ;	mpu6050.c: 178: UART1_CR4 = 0;
      00823F 35 00 52 37      [ 1]  500 	mov	0x5237+0, #0x00
                                    501 ;	mpu6050.c: 179: UART1_CR3 = 0;
      008243 35 00 52 36      [ 1]  502 	mov	0x5236+0, #0x00
                                    503 ;	mpu6050.c: 180: UART1_CR5 = 0;
      008247 35 00 52 38      [ 1]  504 	mov	0x5238+0, #0x00
                                    505 ;	mpu6050.c: 181: UART1_GTR = 0;
      00824B 35 00 52 39      [ 1]  506 	mov	0x5239+0, #0x00
                                    507 ;	mpu6050.c: 182: UART1_PSCR = 0;
      00824F 35 00 52 3A      [ 1]  508 	mov	0x523a+0, #0x00
                                    509 ;	mpu6050.c: 186: UNSET (UART1_CR1, CR1_M);        //  8 Data bits.
      008253 C6 52 34         [ 1]  510 	ld	a, 0x5234
      008256 A4 EF            [ 1]  511 	and	a, #0xef
                                    512 ;	mpu6050.c: 187: UNSET (UART1_CR1, CR1_PCEN);     //  Disable parity.
      008258 C7 52 34         [ 1]  513 	ld	0x5234, a
      00825B A4 FB            [ 1]  514 	and	a, #0xfb
      00825D C7 52 34         [ 1]  515 	ld	0x5234, a
                                    516 ;	mpu6050.c: 188: UNSET (UART1_CR3, CR3_STOPH);    //  1 stop bit.
      008260 C6 52 36         [ 1]  517 	ld	a, 0x5236
      008263 A4 DF            [ 1]  518 	and	a, #0xdf
                                    519 ;	mpu6050.c: 189: UNSET (UART1_CR3, CR3_STOPL);    //  1 stop bit.
      008265 C7 52 36         [ 1]  520 	ld	0x5236, a
      008268 A4 EF            [ 1]  521 	and	a, #0xef
      00826A C7 52 36         [ 1]  522 	ld	0x5236, a
                                    523 ;	mpu6050.c: 190: UART1_BRR2 = 0x0a;      //  Set the baud rate registers to 115200 baud
      00826D 35 0A 52 33      [ 1]  524 	mov	0x5233+0, #0x0a
                                    525 ;	mpu6050.c: 191: UART1_BRR1 = 0x08;      //  based upon a 16 MHz system clock.
      008271 35 08 52 32      [ 1]  526 	mov	0x5232+0, #0x08
                                    527 ;	mpu6050.c: 195: UNSET (UART1_CR2, CR2_TEN);      //  Disable transmit.
      008275 C6 52 35         [ 1]  528 	ld	a, 0x5235
      008278 A4 F7            [ 1]  529 	and	a, #0xf7
                                    530 ;	mpu6050.c: 196: UNSET (UART1_CR2, CR2_REN);      //  Disable receive.
      00827A C7 52 35         [ 1]  531 	ld	0x5235, a
      00827D A4 FB            [ 1]  532 	and	a, #0xfb
      00827F C7 52 35         [ 1]  533 	ld	0x5235, a
                                    534 ;	mpu6050.c: 200: SET (UART1_CR3, CR3_CPOL);
      008282 C6 52 36         [ 1]  535 	ld	a, 0x5236
      008285 AA 04            [ 1]  536 	or	a, #0x04
                                    537 ;	mpu6050.c: 201: SET (UART1_CR3, CR3_CPHA);
      008287 C7 52 36         [ 1]  538 	ld	0x5236, a
      00828A AA 02            [ 1]  539 	or	a, #0x02
                                    540 ;	mpu6050.c: 202: SET (UART1_CR3, CR3_LBCL);
      00828C C7 52 36         [ 1]  541 	ld	0x5236, a
      00828F AA 01            [ 1]  542 	or	a, #0x01
      008291 C7 52 36         [ 1]  543 	ld	0x5236, a
                                    544 ;	mpu6050.c: 206: SET (UART1_CR2, CR2_TEN);
      008294 C6 52 35         [ 1]  545 	ld	a, 0x5235
      008297 AA 08            [ 1]  546 	or	a, #0x08
                                    547 ;	mpu6050.c: 207: SET (UART1_CR2, CR2_REN);
      008299 C7 52 35         [ 1]  548 	ld	0x5235, a
      00829C AA 04            [ 1]  549 	or	a, #0x04
      00829E C7 52 35         [ 1]  550 	ld	0x5235, a
                                    551 ;	mpu6050.c: 208: UART1_CR3 = CR3_CLKEN;
      0082A1 35 08 52 36      [ 1]  552 	mov	0x5236+0, #0x08
                                    553 ;	mpu6050.c: 209: }
      0082A5 81               [ 4]  554 	ret
                                    555 ;	mpu6050.c: 236: void tm1637Init(void)
                                    556 ;	-----------------------------------------
                                    557 ;	 function tm1637Init
                                    558 ;	-----------------------------------------
      0082A6                        559 _tm1637Init:
                                    560 ;	mpu6050.c: 238: tm1637SetBrightness(8);
      0082A6 A6 08            [ 1]  561 	ld	a, #0x08
                                    562 ;	mpu6050.c: 239: }
      0082A8 CC 83 36         [ 2]  563 	jp	_tm1637SetBrightness
                                    564 ;	mpu6050.c: 243: void tm1637DisplayDecimal(long TT,unsigned int displaySeparator)
                                    565 ;	-----------------------------------------
                                    566 ;	 function tm1637DisplayDecimal
                                    567 ;	-----------------------------------------
      0082AB                        568 _tm1637DisplayDecimal:
      0082AB 52 08            [ 2]  569 	sub	sp, #8
                                    570 ;	mpu6050.c: 245: unsigned int v = TT & 0x0000FFFF;
      0082AD 16 0D            [ 2]  571 	ldw	y, (0x0d, sp)
                                    572 ;	mpu6050.c: 251: for (ii = 0; ii < 4; ++ii) {
      0082AF 5F               [ 1]  573 	clrw	x
      0082B0 1F 07            [ 2]  574 	ldw	(0x07, sp), x
      0082B2                        575 00106$:
                                    576 ;	mpu6050.c: 252: digitArr[ii] = segmentMap[v % 10];
      0082B2 96               [ 1]  577 	ldw	x, sp
      0082B3 5C               [ 1]  578 	incw	x
      0082B4 72 FB 07         [ 2]  579 	addw	x, (0x07, sp)
      0082B7 1F 05            [ 2]  580 	ldw	(0x05, sp), x
      0082B9 90 89            [ 2]  581 	pushw	y
      0082BB 93               [ 1]  582 	ldw	x, y
      0082BC 90 AE 00 0A      [ 2]  583 	ldw	y, #0x000a
      0082C0 65               [ 2]  584 	divw	x, y
      0082C1 93               [ 1]  585 	ldw	x, y
      0082C2 90 85            [ 2]  586 	popw	y
      0082C4 D6 80 2D         [ 1]  587 	ld	a, (_segmentMap+0, x)
      0082C7 1E 05            [ 2]  588 	ldw	x, (0x05, sp)
      0082C9 F7               [ 1]  589 	ld	(x), a
                                    590 ;	mpu6050.c: 253: if (ii == 2 && displaySeparator) {
      0082CA 1E 07            [ 2]  591 	ldw	x, (0x07, sp)
      0082CC A3 00 02         [ 2]  592 	cpw	x, #0x0002
      0082CF 26 0C            [ 1]  593 	jrne	00102$
      0082D1 1E 0F            [ 2]  594 	ldw	x, (0x0f, sp)
      0082D3 27 08            [ 1]  595 	jreq	00102$
                                    596 ;	mpu6050.c: 254: digitArr[ii] |= 1 << 7;
      0082D5 1E 05            [ 2]  597 	ldw	x, (0x05, sp)
      0082D7 F6               [ 1]  598 	ld	a, (x)
      0082D8 AA 80            [ 1]  599 	or	a, #0x80
      0082DA 1E 05            [ 2]  600 	ldw	x, (0x05, sp)
      0082DC F7               [ 1]  601 	ld	(x), a
      0082DD                        602 00102$:
                                    603 ;	mpu6050.c: 256: v /= 10;
      0082DD 93               [ 1]  604 	ldw	x, y
      0082DE 90 AE 00 0A      [ 2]  605 	ldw	y, #0x000a
      0082E2 65               [ 2]  606 	divw	x, y
      0082E3 51               [ 1]  607 	exgw	x, y
                                    608 ;	mpu6050.c: 251: for (ii = 0; ii < 4; ++ii) {
      0082E4 1E 07            [ 2]  609 	ldw	x, (0x07, sp)
      0082E6 5C               [ 1]  610 	incw	x
      0082E7 1F 07            [ 2]  611 	ldw	(0x07, sp), x
      0082E9 A3 00 04         [ 2]  612 	cpw	x, #0x0004
      0082EC 25 C4            [ 1]  613 	jrc	00106$
                                    614 ;	mpu6050.c: 259: _tm1637Start();
      0082EE CD 83 46         [ 4]  615 	call	__tm1637Start
                                    616 ;	mpu6050.c: 260: _tm1637WriteByte(0x40);
      0082F1 A6 40            [ 1]  617 	ld	a, #0x40
      0082F3 CD 83 88         [ 4]  618 	call	__tm1637WriteByte
                                    619 ;	mpu6050.c: 261: _tm1637ReadResult();
      0082F6 CD 83 73         [ 4]  620 	call	__tm1637ReadResult
                                    621 ;	mpu6050.c: 262: _tm1637Stop();
      0082F9 CD 83 55         [ 4]  622 	call	__tm1637Stop
                                    623 ;	mpu6050.c: 264: _tm1637Start();
      0082FC CD 83 46         [ 4]  624 	call	__tm1637Start
                                    625 ;	mpu6050.c: 265: _tm1637WriteByte(0xc0);
      0082FF A6 C0            [ 1]  626 	ld	a, #0xc0
      008301 CD 83 88         [ 4]  627 	call	__tm1637WriteByte
                                    628 ;	mpu6050.c: 266: _tm1637ReadResult();
      008304 CD 83 73         [ 4]  629 	call	__tm1637ReadResult
                                    630 ;	mpu6050.c: 268: for (ii = 0; ii < 4; ++ii) {
      008307 5F               [ 1]  631 	clrw	x
      008308                        632 00108$:
                                    633 ;	mpu6050.c: 269: _tm1637WriteByte(digitArr[3 - ii]);
      008308 9F               [ 1]  634 	ld	a, xl
      008309 6B 08            [ 1]  635 	ld	(0x08, sp), a
      00830B A6 03            [ 1]  636 	ld	a, #0x03
      00830D 10 08            [ 1]  637 	sub	a, (0x08, sp)
      00830F 6B 08            [ 1]  638 	ld	(0x08, sp), a
      008311 49               [ 1]  639 	rlc	a
      008312 4F               [ 1]  640 	clr	a
      008313 A2 00            [ 1]  641 	sbc	a, #0x00
      008315 6B 07            [ 1]  642 	ld	(0x07, sp), a
      008317 90 96            [ 1]  643 	ldw	y, sp
      008319 90 5C            [ 1]  644 	incw	y
      00831B 72 F9 07         [ 2]  645 	addw	y, (0x07, sp)
      00831E 90 F6            [ 1]  646 	ld	a, (y)
      008320 89               [ 2]  647 	pushw	x
      008321 CD 83 88         [ 4]  648 	call	__tm1637WriteByte
      008324 CD 83 73         [ 4]  649 	call	__tm1637ReadResult
      008327 85               [ 2]  650 	popw	x
                                    651 ;	mpu6050.c: 268: for (ii = 0; ii < 4; ++ii) {
      008328 5C               [ 1]  652 	incw	x
      008329 A3 00 04         [ 2]  653 	cpw	x, #0x0004
      00832C 25 DA            [ 1]  654 	jrc	00108$
                                    655 ;	mpu6050.c: 273: _tm1637Stop();
      00832E CD 83 55         [ 4]  656 	call	__tm1637Stop
                                    657 ;	mpu6050.c: 274: }
      008331 1E 09            [ 2]  658 	ldw	x, (9, sp)
      008333 5B 10            [ 2]  659 	addw	sp, #16
      008335 FC               [ 2]  660 	jp	(x)
                                    661 ;	mpu6050.c: 278: void tm1637SetBrightness(char brightness)
                                    662 ;	-----------------------------------------
                                    663 ;	 function tm1637SetBrightness
                                    664 ;	-----------------------------------------
      008336                        665 _tm1637SetBrightness:
                                    666 ;	mpu6050.c: 285: _tm1637Start();
      008336 88               [ 1]  667 	push	a
      008337 CD 83 46         [ 4]  668 	call	__tm1637Start
      00833A 84               [ 1]  669 	pop	a
                                    670 ;	mpu6050.c: 286: _tm1637WriteByte(0x87 + brightness);
      00833B AB 87            [ 1]  671 	add	a, #0x87
      00833D CD 83 88         [ 4]  672 	call	__tm1637WriteByte
                                    673 ;	mpu6050.c: 287: _tm1637ReadResult();
      008340 CD 83 73         [ 4]  674 	call	__tm1637ReadResult
                                    675 ;	mpu6050.c: 288: _tm1637Stop();
                                    676 ;	mpu6050.c: 289: }
      008343 CC 83 55         [ 2]  677 	jp	__tm1637Stop
                                    678 ;	mpu6050.c: 291: void _tm1637Start(void)
                                    679 ;	-----------------------------------------
                                    680 ;	 function _tm1637Start
                                    681 ;	-----------------------------------------
      008346                        682 __tm1637Start:
                                    683 ;	mpu6050.c: 293: _tm1637ClkHigh();
      008346 CD 83 BD         [ 4]  684 	call	__tm1637ClkHigh
                                    685 ;	mpu6050.c: 294: _tm1637DioHigh();
      008349 CD 83 C7         [ 4]  686 	call	__tm1637DioHigh
                                    687 ;	mpu6050.c: 295: delay(5);
      00834C AE 00 05         [ 2]  688 	ldw	x, #0x0005
      00834F CD 80 C3         [ 4]  689 	call	_delay
                                    690 ;	mpu6050.c: 296: _tm1637DioLow();
                                    691 ;	mpu6050.c: 297: }
      008352 CC 83 CC         [ 2]  692 	jp	__tm1637DioLow
                                    693 ;	mpu6050.c: 299: void _tm1637Stop(void)
                                    694 ;	-----------------------------------------
                                    695 ;	 function _tm1637Stop
                                    696 ;	-----------------------------------------
      008355                        697 __tm1637Stop:
                                    698 ;	mpu6050.c: 301: _tm1637ClkLow();
      008355 CD 83 C2         [ 4]  699 	call	__tm1637ClkLow
                                    700 ;	mpu6050.c: 302: delay(5);
      008358 AE 00 05         [ 2]  701 	ldw	x, #0x0005
      00835B CD 80 C3         [ 4]  702 	call	_delay
                                    703 ;	mpu6050.c: 303: _tm1637DioLow();
      00835E CD 83 CC         [ 4]  704 	call	__tm1637DioLow
                                    705 ;	mpu6050.c: 304: delay(5);
      008361 AE 00 05         [ 2]  706 	ldw	x, #0x0005
      008364 CD 80 C3         [ 4]  707 	call	_delay
                                    708 ;	mpu6050.c: 305: _tm1637ClkHigh();
      008367 CD 83 BD         [ 4]  709 	call	__tm1637ClkHigh
                                    710 ;	mpu6050.c: 306: delay(5);
      00836A AE 00 05         [ 2]  711 	ldw	x, #0x0005
      00836D CD 80 C3         [ 4]  712 	call	_delay
                                    713 ;	mpu6050.c: 307: _tm1637DioHigh();
                                    714 ;	mpu6050.c: 308: }
      008370 CC 83 C7         [ 2]  715 	jp	__tm1637DioHigh
                                    716 ;	mpu6050.c: 310: void _tm1637ReadResult(void)
                                    717 ;	-----------------------------------------
                                    718 ;	 function _tm1637ReadResult
                                    719 ;	-----------------------------------------
      008373                        720 __tm1637ReadResult:
                                    721 ;	mpu6050.c: 312: _tm1637ClkLow();
      008373 CD 83 C2         [ 4]  722 	call	__tm1637ClkLow
                                    723 ;	mpu6050.c: 313: delay(5);
      008376 AE 00 05         [ 2]  724 	ldw	x, #0x0005
      008379 CD 80 C3         [ 4]  725 	call	_delay
                                    726 ;	mpu6050.c: 315: _tm1637ClkHigh();
      00837C CD 83 BD         [ 4]  727 	call	__tm1637ClkHigh
                                    728 ;	mpu6050.c: 316: delay(5);
      00837F AE 00 05         [ 2]  729 	ldw	x, #0x0005
      008382 CD 80 C3         [ 4]  730 	call	_delay
                                    731 ;	mpu6050.c: 317: _tm1637ClkLow();
                                    732 ;	mpu6050.c: 318: }
      008385 CC 83 C2         [ 2]  733 	jp	__tm1637ClkLow
                                    734 ;	mpu6050.c: 320: void _tm1637WriteByte(unsigned char b)
                                    735 ;	-----------------------------------------
                                    736 ;	 function _tm1637WriteByte
                                    737 ;	-----------------------------------------
      008388                        738 __tm1637WriteByte:
      008388 52 03            [ 2]  739 	sub	sp, #3
      00838A 6B 01            [ 1]  740 	ld	(0x01, sp), a
                                    741 ;	mpu6050.c: 322: for (ii = 0; ii < 8; ++ii) {
      00838C 5F               [ 1]  742 	clrw	x
      00838D 1F 02            [ 2]  743 	ldw	(0x02, sp), x
      00838F                        744 00105$:
                                    745 ;	mpu6050.c: 323: _tm1637ClkLow();
      00838F CD 83 C2         [ 4]  746 	call	__tm1637ClkLow
                                    747 ;	mpu6050.c: 324: if (b & 0x01) {
      008392 7B 01            [ 1]  748 	ld	a, (0x01, sp)
      008394 44               [ 1]  749 	srl	a
      008395 24 05            [ 1]  750 	jrnc	00102$
                                    751 ;	mpu6050.c: 325: _tm1637DioHigh();
      008397 CD 83 C7         [ 4]  752 	call	__tm1637DioHigh
      00839A 20 03            [ 2]  753 	jra	00103$
      00839C                        754 00102$:
                                    755 ;	mpu6050.c: 328: _tm1637DioLow();
      00839C CD 83 CC         [ 4]  756 	call	__tm1637DioLow
      00839F                        757 00103$:
                                    758 ;	mpu6050.c: 330: delay(15);
      00839F AE 00 0F         [ 2]  759 	ldw	x, #0x000f
      0083A2 CD 80 C3         [ 4]  760 	call	_delay
                                    761 ;	mpu6050.c: 331: b >>= 1;
      0083A5 04 01            [ 1]  762 	srl	(0x01, sp)
                                    763 ;	mpu6050.c: 332: _tm1637ClkHigh();
      0083A7 CD 83 BD         [ 4]  764 	call	__tm1637ClkHigh
                                    765 ;	mpu6050.c: 333: delay(15);
      0083AA AE 00 0F         [ 2]  766 	ldw	x, #0x000f
      0083AD CD 80 C3         [ 4]  767 	call	_delay
                                    768 ;	mpu6050.c: 322: for (ii = 0; ii < 8; ++ii) {
      0083B0 1E 02            [ 2]  769 	ldw	x, (0x02, sp)
      0083B2 5C               [ 1]  770 	incw	x
      0083B3 1F 02            [ 2]  771 	ldw	(0x02, sp), x
      0083B5 A3 00 08         [ 2]  772 	cpw	x, #0x0008
      0083B8 2F D5            [ 1]  773 	jrslt	00105$
                                    774 ;	mpu6050.c: 335: }
      0083BA 5B 03            [ 2]  775 	addw	sp, #3
      0083BC 81               [ 4]  776 	ret
                                    777 ;	mpu6050.c: 339: void _tm1637ClkHigh(void)
                                    778 ;	-----------------------------------------
                                    779 ;	 function _tm1637ClkHigh
                                    780 ;	-----------------------------------------
      0083BD                        781 __tm1637ClkHigh:
                                    782 ;	mpu6050.c: 344: PD_ODR |= 1 << 2;
      0083BD 72 14 50 0F      [ 1]  783 	bset	0x500f, #2
                                    784 ;	mpu6050.c: 345: }
      0083C1 81               [ 4]  785 	ret
                                    786 ;	mpu6050.c: 347: void _tm1637ClkLow(void)
                                    787 ;	-----------------------------------------
                                    788 ;	 function _tm1637ClkLow
                                    789 ;	-----------------------------------------
      0083C2                        790 __tm1637ClkLow:
                                    791 ;	mpu6050.c: 351: PD_ODR &= ~(1 << 2);
      0083C2 72 15 50 0F      [ 1]  792 	bres	0x500f, #2
                                    793 ;	mpu6050.c: 355: }
      0083C6 81               [ 4]  794 	ret
                                    795 ;	mpu6050.c: 357: void _tm1637DioHigh(void)
                                    796 ;	-----------------------------------------
                                    797 ;	 function _tm1637DioHigh
                                    798 ;	-----------------------------------------
      0083C7                        799 __tm1637DioHigh:
                                    800 ;	mpu6050.c: 361: PD_ODR |= 1 << 3;
      0083C7 72 16 50 0F      [ 1]  801 	bset	0x500f, #3
                                    802 ;	mpu6050.c: 363: }
      0083CB 81               [ 4]  803 	ret
                                    804 ;	mpu6050.c: 365: void _tm1637DioLow(void)
                                    805 ;	-----------------------------------------
                                    806 ;	 function _tm1637DioLow
                                    807 ;	-----------------------------------------
      0083CC                        808 __tm1637DioLow:
                                    809 ;	mpu6050.c: 367: PD_ODR &= ~(1 << 3);
      0083CC 72 17 50 0F      [ 1]  810 	bres	0x500f, #3
                                    811 ;	mpu6050.c: 372: }
      0083D0 81               [ 4]  812 	ret
                                    813 ;	mpu6050.c: 378: void initMPU6050(){
                                    814 ;	-----------------------------------------
                                    815 ;	 function initMPU6050
                                    816 ;	-----------------------------------------
      0083D1                        817 _initMPU6050:
                                    818 ;	mpu6050.c: 380: i2c_set_start_ack();
      0083D1 CD 81 8A         [ 4]  819 	call	_i2c_set_start_ack
                                    820 ;	mpu6050.c: 381: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      0083D4 4B 00            [ 1]  821 	push	#0x00
      0083D6 A6 68            [ 1]  822 	ld	a, #0x68
      0083D8 CD 81 4A         [ 4]  823 	call	_i2c_send_address
                                    824 ;	mpu6050.c: 382: i2c_send_reg(0x6B);
      0083DB A6 6B            [ 1]  825 	ld	a, #0x6b
      0083DD CD 81 1A         [ 4]  826 	call	_i2c_send_reg
                                    827 ;	mpu6050.c: 383: i2c_send_reg(0x80);
      0083E0 A6 80            [ 1]  828 	ld	a, #0x80
      0083E2 CD 81 1A         [ 4]  829 	call	_i2c_send_reg
                                    830 ;	mpu6050.c: 384: i2c_set_stop();
      0083E5 CD 81 15         [ 4]  831 	call	_i2c_set_stop
                                    832 ;	mpu6050.c: 385: delay(100);
      0083E8 AE 00 64         [ 2]  833 	ldw	x, #0x0064
      0083EB CD 80 C3         [ 4]  834 	call	_delay
                                    835 ;	mpu6050.c: 386: i2c_set_start_ack();
      0083EE CD 81 8A         [ 4]  836 	call	_i2c_set_start_ack
                                    837 ;	mpu6050.c: 387: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      0083F1 4B 00            [ 1]  838 	push	#0x00
      0083F3 A6 68            [ 1]  839 	ld	a, #0x68
      0083F5 CD 81 4A         [ 4]  840 	call	_i2c_send_address
                                    841 ;	mpu6050.c: 388: i2c_send_reg(0x6B);
      0083F8 A6 6B            [ 1]  842 	ld	a, #0x6b
      0083FA CD 81 1A         [ 4]  843 	call	_i2c_send_reg
                                    844 ;	mpu6050.c: 389: i2c_send_reg(0x00);
      0083FD 4F               [ 1]  845 	clr	a
      0083FE CD 81 1A         [ 4]  846 	call	_i2c_send_reg
                                    847 ;	mpu6050.c: 390: i2c_set_stop();
      008401 CD 81 15         [ 4]  848 	call	_i2c_set_stop
                                    849 ;	mpu6050.c: 391: delay(100);
      008404 AE 00 64         [ 2]  850 	ldw	x, #0x0064
      008407 CD 80 C3         [ 4]  851 	call	_delay
                                    852 ;	mpu6050.c: 392: i2c_set_start_ack();
      00840A CD 81 8A         [ 4]  853 	call	_i2c_set_start_ack
                                    854 ;	mpu6050.c: 393: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      00840D 4B 00            [ 1]  855 	push	#0x00
      00840F A6 68            [ 1]  856 	ld	a, #0x68
      008411 CD 81 4A         [ 4]  857 	call	_i2c_send_address
                                    858 ;	mpu6050.c: 394: i2c_send_reg(0x1A);
      008414 A6 1A            [ 1]  859 	ld	a, #0x1a
      008416 CD 81 1A         [ 4]  860 	call	_i2c_send_reg
                                    861 ;	mpu6050.c: 395: i2c_send_reg(0x01);
      008419 A6 01            [ 1]  862 	ld	a, #0x01
      00841B CD 81 1A         [ 4]  863 	call	_i2c_send_reg
                                    864 ;	mpu6050.c: 396: i2c_set_stop();
      00841E CD 81 15         [ 4]  865 	call	_i2c_set_stop
                                    866 ;	mpu6050.c: 397: delay(100);
      008421 AE 00 64         [ 2]  867 	ldw	x, #0x0064
      008424 CD 80 C3         [ 4]  868 	call	_delay
                                    869 ;	mpu6050.c: 398: i2c_set_start_ack();
      008427 CD 81 8A         [ 4]  870 	call	_i2c_set_start_ack
                                    871 ;	mpu6050.c: 399: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      00842A 4B 00            [ 1]  872 	push	#0x00
      00842C A6 68            [ 1]  873 	ld	a, #0x68
      00842E CD 81 4A         [ 4]  874 	call	_i2c_send_address
                                    875 ;	mpu6050.c: 400: i2c_send_reg(0x1B);
      008431 A6 1B            [ 1]  876 	ld	a, #0x1b
      008433 CD 81 1A         [ 4]  877 	call	_i2c_send_reg
                                    878 ;	mpu6050.c: 401: i2c_send_reg(0x01);
      008436 A6 01            [ 1]  879 	ld	a, #0x01
      008438 CD 81 1A         [ 4]  880 	call	_i2c_send_reg
                                    881 ;	mpu6050.c: 402: i2c_set_stop();
                                    882 ;	mpu6050.c: 410: }
      00843B CC 81 15         [ 2]  883 	jp	_i2c_set_stop
                                    884 ;	mpu6050.c: 435: unsigned int getMPU6050(){
                                    885 ;	-----------------------------------------
                                    886 ;	 function getMPU6050
                                    887 ;	-----------------------------------------
      00843E                        888 _getMPU6050:
      00843E 52 04            [ 2]  889 	sub	sp, #4
                                    890 ;	mpu6050.c: 439: xh = i2c_read_register (MPU6050_ADDR, 0x43);
      008440 4B 43            [ 1]  891 	push	#0x43
      008442 A6 68            [ 1]  892 	ld	a, #0x68
      008444 CD 81 D2         [ 4]  893 	call	_i2c_read_register
      008447 6B 03            [ 1]  894 	ld	(0x03, sp), a
                                    895 ;	mpu6050.c: 440: UARTPrintF("read 1 \n\r");
      008449 AE 80 3E         [ 2]  896 	ldw	x, #(___str_0+0)
      00844C CD 81 3A         [ 4]  897 	call	_UARTPrintF
                                    898 ;	mpu6050.c: 441: xl = i2c_read_register (MPU6050_ADDR, 0x44);
      00844F 4B 44            [ 1]  899 	push	#0x44
      008451 A6 68            [ 1]  900 	ld	a, #0x68
      008453 CD 81 D2         [ 4]  901 	call	_i2c_read_register
      008456 6B 04            [ 1]  902 	ld	(0x04, sp), a
                                    903 ;	mpu6050.c: 442: UARTPrintF("read 2 \n\r");
      008458 AE 80 48         [ 2]  904 	ldw	x, #(___str_1+0)
      00845B CD 81 3A         [ 4]  905 	call	_UARTPrintF
                                    906 ;	mpu6050.c: 443: xx = xh << 8 | xl;
      00845E 7B 03            [ 1]  907 	ld	a, (0x03, sp)
      008460 95               [ 1]  908 	ld	xh, a
      008461 0F 02            [ 1]  909 	clr	(0x02, sp)
      008463 7B 04            [ 1]  910 	ld	a, (0x04, sp)
      008465 0F 03            [ 1]  911 	clr	(0x03, sp)
      008467 1A 02            [ 1]  912 	or	a, (0x02, sp)
      008469 02               [ 1]  913 	rlwa	x
      00846A 1A 03            [ 1]  914 	or	a, (0x03, sp)
                                    915 ;	mpu6050.c: 444: return(xx);
      00846C 95               [ 1]  916 	ld	xh, a
                                    917 ;	mpu6050.c: 445: }
      00846D 5B 04            [ 2]  918 	addw	sp, #4
      00846F 81               [ 4]  919 	ret
                                    920 ;	mpu6050.c: 448: int main () {
                                    921 ;	-----------------------------------------
                                    922 ;	 function main
                                    923 ;	-----------------------------------------
      008470                        924 _main:
      008470 52 0C            [ 2]  925 	sub	sp, #12
                                    926 ;	mpu6050.c: 455: InitializeSystemClock();
      008472 CD 80 88         [ 4]  927 	call	_InitializeSystemClock
                                    928 ;	mpu6050.c: 457: PB_DDR = (0 << 4);
      008475 35 00 50 07      [ 1]  929 	mov	0x5007+0, #0x00
                                    930 ;	mpu6050.c: 458: PB_DDR = (0 << 5);
      008479 35 00 50 07      [ 1]  931 	mov	0x5007+0, #0x00
                                    932 ;	mpu6050.c: 463: PD_DDR = (1 << 3) | (1 << 2); // output mode
      00847D 35 0C 50 11      [ 1]  933 	mov	0x5011+0, #0x0c
                                    934 ;	mpu6050.c: 464: PD_CR2 = (1 << 3) | (1 << 2); // up to 10MHz speed
      008481 35 0C 50 13      [ 1]  935 	mov	0x5013+0, #0x0c
                                    936 ;	mpu6050.c: 465: PD_CR1 = 0; // push-pull
      008485 35 00 50 12      [ 1]  937 	mov	0x5012+0, #0x00
                                    938 ;	mpu6050.c: 466: PD_CR2 = 0; // up to 10MHz speed
      008489 35 00 50 13      [ 1]  939 	mov	0x5013+0, #0x00
                                    940 ;	mpu6050.c: 467: tm1637Init();
      00848D CD 82 A6         [ 4]  941 	call	_tm1637Init
                                    942 ;	mpu6050.c: 469: InitializeUART();
      008490 CD 82 37         [ 4]  943 	call	_InitializeUART
                                    944 ;	mpu6050.c: 470: UARTPrintF("uart initialised \n\r");
      008493 AE 80 52         [ 2]  945 	ldw	x, #(___str_2+0)
      008496 CD 81 3A         [ 4]  946 	call	_UARTPrintF
                                    947 ;	mpu6050.c: 471: InitializeI2C();
      008499 CD 82 0D         [ 4]  948 	call	_InitializeI2C
                                    949 ;	mpu6050.c: 472: delay(200);
      00849C AE 00 C8         [ 2]  950 	ldw	x, #0x00c8
      00849F CD 80 C3         [ 4]  951 	call	_delay
                                    952 ;	mpu6050.c: 473: UARTPrintF("testing 0 \n\r");
      0084A2 AE 80 66         [ 2]  953 	ldw	x, #(___str_3+0)
      0084A5 CD 81 3A         [ 4]  954 	call	_UARTPrintF
                                    955 ;	mpu6050.c: 474: initMPU6050();
      0084A8 CD 83 D1         [ 4]  956 	call	_initMPU6050
                                    957 ;	mpu6050.c: 475: delay(200);
      0084AB AE 00 C8         [ 2]  958 	ldw	x, #0x00c8
      0084AE CD 80 C3         [ 4]  959 	call	_delay
                                    960 ;	mpu6050.c: 478: UARTPrintF("testing 1 \n\r");
      0084B1 AE 80 73         [ 2]  961 	ldw	x, #(___str_4+0)
      0084B4 CD 81 3A         [ 4]  962 	call	_UARTPrintF
                                    963 ;	mpu6050.c: 479: while (1) {
      0084B7                        964 00114$:
                                    965 ;	mpu6050.c: 480: objTemp = getMPU6050();
      0084B7 CD 84 3E         [ 4]  966 	call	_getMPU6050
      0084BA CD 88 C6         [ 4]  967 	call	___uint2fs
      0084BD 1F 03            [ 2]  968 	ldw	(0x03, sp), x
      0084BF 17 01            [ 2]  969 	ldw	(0x01, sp), y
                                    970 ;	mpu6050.c: 484: while (objTemp > 1000) {
      0084C1 5F               [ 1]  971 	clrw	x
      0084C2 1F 0B            [ 2]  972 	ldw	(0x0b, sp), x
      0084C4                        973 00101$:
      0084C4 1E 03            [ 2]  974 	ldw	x, (0x03, sp)
      0084C6 89               [ 2]  975 	pushw	x
      0084C7 1E 03            [ 2]  976 	ldw	x, (0x03, sp)
      0084C9 89               [ 2]  977 	pushw	x
      0084CA 5F               [ 1]  978 	clrw	x
      0084CB 89               [ 2]  979 	pushw	x
      0084CC 4B 7A            [ 1]  980 	push	#0x7a
      0084CE 4B 44            [ 1]  981 	push	#0x44
      0084D0 CD 85 EE         [ 4]  982 	call	___fslt
      0084D3 4D               [ 1]  983 	tnz	a
      0084D4 27 1A            [ 1]  984 	jreq	00127$
                                    985 ;	mpu6050.c: 485: vierde+=1;
      0084D6 1E 0B            [ 2]  986 	ldw	x, (0x0b, sp)
      0084D8 5C               [ 1]  987 	incw	x
      0084D9 1F 0B            [ 2]  988 	ldw	(0x0b, sp), x
                                    989 ;	mpu6050.c: 486: objTemp-=1000;
      0084DB 5F               [ 1]  990 	clrw	x
      0084DC 89               [ 2]  991 	pushw	x
      0084DD 4B 7A            [ 1]  992 	push	#0x7a
      0084DF 4B 44            [ 1]  993 	push	#0x44
      0084E1 1E 07            [ 2]  994 	ldw	x, (0x07, sp)
      0084E3 89               [ 2]  995 	pushw	x
      0084E4 1E 07            [ 2]  996 	ldw	x, (0x07, sp)
      0084E6 89               [ 2]  997 	pushw	x
      0084E7 CD 85 C5         [ 4]  998 	call	___fssub
      0084EA 1F 03            [ 2]  999 	ldw	(0x03, sp), x
      0084EC 17 01            [ 2] 1000 	ldw	(0x01, sp), y
      0084EE 20 D4            [ 2] 1001 	jra	00101$
                                   1002 ;	mpu6050.c: 488: while (objTemp > 100) {
      0084F0                       1003 00127$:
      0084F0 16 0B            [ 2] 1004 	ldw	y, (0x0b, sp)
      0084F2 17 05            [ 2] 1005 	ldw	(0x05, sp), y
      0084F4 5F               [ 1] 1006 	clrw	x
      0084F5 1F 0B            [ 2] 1007 	ldw	(0x0b, sp), x
      0084F7                       1008 00104$:
      0084F7 1E 03            [ 2] 1009 	ldw	x, (0x03, sp)
      0084F9 89               [ 2] 1010 	pushw	x
      0084FA 1E 03            [ 2] 1011 	ldw	x, (0x03, sp)
      0084FC 89               [ 2] 1012 	pushw	x
      0084FD 5F               [ 1] 1013 	clrw	x
      0084FE 89               [ 2] 1014 	pushw	x
      0084FF 4B C8            [ 1] 1015 	push	#0xc8
      008501 4B 42            [ 1] 1016 	push	#0x42
      008503 CD 85 EE         [ 4] 1017 	call	___fslt
      008506 4D               [ 1] 1018 	tnz	a
      008507 27 1A            [ 1] 1019 	jreq	00128$
                                   1020 ;	mpu6050.c: 489: derde+=1;
      008509 1E 0B            [ 2] 1021 	ldw	x, (0x0b, sp)
      00850B 5C               [ 1] 1022 	incw	x
      00850C 1F 0B            [ 2] 1023 	ldw	(0x0b, sp), x
                                   1024 ;	mpu6050.c: 490: objTemp-=100;
      00850E 5F               [ 1] 1025 	clrw	x
      00850F 89               [ 2] 1026 	pushw	x
      008510 4B C8            [ 1] 1027 	push	#0xc8
      008512 4B 42            [ 1] 1028 	push	#0x42
      008514 1E 07            [ 2] 1029 	ldw	x, (0x07, sp)
      008516 89               [ 2] 1030 	pushw	x
      008517 1E 07            [ 2] 1031 	ldw	x, (0x07, sp)
      008519 89               [ 2] 1032 	pushw	x
      00851A CD 85 C5         [ 4] 1033 	call	___fssub
      00851D 1F 03            [ 2] 1034 	ldw	(0x03, sp), x
      00851F 17 01            [ 2] 1035 	ldw	(0x01, sp), y
      008521 20 D4            [ 2] 1036 	jra	00104$
                                   1037 ;	mpu6050.c: 492: while (objTemp > 10) {
      008523                       1038 00128$:
      008523 16 0B            [ 2] 1039 	ldw	y, (0x0b, sp)
      008525 17 07            [ 2] 1040 	ldw	(0x07, sp), y
      008527 5F               [ 1] 1041 	clrw	x
      008528 1F 0B            [ 2] 1042 	ldw	(0x0b, sp), x
      00852A                       1043 00107$:
      00852A 1E 03            [ 2] 1044 	ldw	x, (0x03, sp)
      00852C 89               [ 2] 1045 	pushw	x
      00852D 1E 03            [ 2] 1046 	ldw	x, (0x03, sp)
      00852F 89               [ 2] 1047 	pushw	x
      008530 5F               [ 1] 1048 	clrw	x
      008531 89               [ 2] 1049 	pushw	x
      008532 4B 20            [ 1] 1050 	push	#0x20
      008534 4B 41            [ 1] 1051 	push	#0x41
      008536 CD 85 EE         [ 4] 1052 	call	___fslt
      008539 4D               [ 1] 1053 	tnz	a
      00853A 27 1A            [ 1] 1054 	jreq	00129$
                                   1055 ;	mpu6050.c: 493: tweede+=1;
      00853C 1E 0B            [ 2] 1056 	ldw	x, (0x0b, sp)
      00853E 5C               [ 1] 1057 	incw	x
      00853F 1F 0B            [ 2] 1058 	ldw	(0x0b, sp), x
                                   1059 ;	mpu6050.c: 494: objTemp-=10;
      008541 5F               [ 1] 1060 	clrw	x
      008542 89               [ 2] 1061 	pushw	x
      008543 4B 20            [ 1] 1062 	push	#0x20
      008545 4B 41            [ 1] 1063 	push	#0x41
      008547 1E 07            [ 2] 1064 	ldw	x, (0x07, sp)
      008549 89               [ 2] 1065 	pushw	x
      00854A 1E 07            [ 2] 1066 	ldw	x, (0x07, sp)
      00854C 89               [ 2] 1067 	pushw	x
      00854D CD 85 C5         [ 4] 1068 	call	___fssub
      008550 1F 03            [ 2] 1069 	ldw	(0x03, sp), x
      008552 17 01            [ 2] 1070 	ldw	(0x01, sp), y
      008554 20 D4            [ 2] 1071 	jra	00107$
                                   1072 ;	mpu6050.c: 496: while (objTemp > 0)
      008556                       1073 00129$:
      008556 16 0B            [ 2] 1074 	ldw	y, (0x0b, sp)
      008558 17 09            [ 2] 1075 	ldw	(0x09, sp), y
      00855A 5F               [ 1] 1076 	clrw	x
      00855B 1F 0B            [ 2] 1077 	ldw	(0x0b, sp), x
      00855D                       1078 00110$:
      00855D 1E 03            [ 2] 1079 	ldw	x, (0x03, sp)
      00855F 89               [ 2] 1080 	pushw	x
      008560 1E 03            [ 2] 1081 	ldw	x, (0x03, sp)
      008562 89               [ 2] 1082 	pushw	x
      008563 5F               [ 1] 1083 	clrw	x
      008564 89               [ 2] 1084 	pushw	x
      008565 5F               [ 1] 1085 	clrw	x
      008566 89               [ 2] 1086 	pushw	x
      008567 CD 85 EE         [ 4] 1087 	call	___fslt
      00856A 4D               [ 1] 1088 	tnz	a
      00856B 27 1A            [ 1] 1089 	jreq	00112$
                                   1090 ;	mpu6050.c: 498: eerste+=1;
      00856D 1E 0B            [ 2] 1091 	ldw	x, (0x0b, sp)
      00856F 5C               [ 1] 1092 	incw	x
      008570 1F 0B            [ 2] 1093 	ldw	(0x0b, sp), x
                                   1094 ;	mpu6050.c: 499: objTemp-=1;
      008572 5F               [ 1] 1095 	clrw	x
      008573 89               [ 2] 1096 	pushw	x
      008574 4B 80            [ 1] 1097 	push	#0x80
      008576 4B 3F            [ 1] 1098 	push	#0x3f
      008578 1E 07            [ 2] 1099 	ldw	x, (0x07, sp)
      00857A 89               [ 2] 1100 	pushw	x
      00857B 1E 07            [ 2] 1101 	ldw	x, (0x07, sp)
      00857D 89               [ 2] 1102 	pushw	x
      00857E CD 85 C5         [ 4] 1103 	call	___fssub
      008581 1F 03            [ 2] 1104 	ldw	(0x03, sp), x
      008583 17 01            [ 2] 1105 	ldw	(0x01, sp), y
      008585 20 D6            [ 2] 1106 	jra	00110$
      008587                       1107 00112$:
                                   1108 ;	mpu6050.c: 510: utemp=vierde*1000+derde*100+tweede*10+eerste;
      008587 1E 05            [ 2] 1109 	ldw	x, (0x05, sp)
      008589 89               [ 2] 1110 	pushw	x
      00858A AE 03 E8         [ 2] 1111 	ldw	x, #0x03e8
      00858D CD 86 7E         [ 4] 1112 	call	__mulint
      008590 1F 05            [ 2] 1113 	ldw	(0x05, sp), x
      008592 1E 07            [ 2] 1114 	ldw	x, (0x07, sp)
      008594 89               [ 2] 1115 	pushw	x
      008595 AE 00 64         [ 2] 1116 	ldw	x, #0x0064
      008598 CD 86 7E         [ 4] 1117 	call	__mulint
      00859B 72 FB 05         [ 2] 1118 	addw	x, (0x05, sp)
      00859E 1F 07            [ 2] 1119 	ldw	(0x07, sp), x
      0085A0 1E 09            [ 2] 1120 	ldw	x, (0x09, sp)
      0085A2 58               [ 2] 1121 	sllw	x
      0085A3 58               [ 2] 1122 	sllw	x
      0085A4 72 FB 09         [ 2] 1123 	addw	x, (0x09, sp)
      0085A7 58               [ 2] 1124 	sllw	x
      0085A8 72 FB 07         [ 2] 1125 	addw	x, (0x07, sp)
      0085AB 72 FB 0B         [ 2] 1126 	addw	x, (0x0b, sp)
      0085AE 90 5F            [ 1] 1127 	clrw	y
      0085B0 5D               [ 2] 1128 	tnzw	x
      0085B1 2A 02            [ 1] 1129 	jrpl	00175$
      0085B3 90 5A            [ 2] 1130 	decw	y
      0085B5                       1131 00175$:
                                   1132 ;	mpu6050.c: 513: tm1637DisplayDecimal(utemp, 1); // eg 37:12
      0085B5 4B 01            [ 1] 1133 	push	#0x01
      0085B7 4B 00            [ 1] 1134 	push	#0x00
      0085B9 89               [ 2] 1135 	pushw	x
      0085BA 90 89            [ 2] 1136 	pushw	y
      0085BC CD 82 AB         [ 4] 1137 	call	_tm1637DisplayDecimal
                                   1138 ;	mpu6050.c: 517: delayTenMicro();
      0085BF CD 80 80         [ 4] 1139 	call	_delayTenMicro
                                   1140 ;	mpu6050.c: 519: }
      0085C2 CC 84 B7         [ 2] 1141 	jp	00114$
                                   1142 	.area CODE
                                   1143 	.area CONST
      00802D                       1144 _segmentMap:
      00802D 3F                    1145 	.db #0x3f	; 63
      00802E 06                    1146 	.db #0x06	; 6
      00802F 5B                    1147 	.db #0x5b	; 91
      008030 4F                    1148 	.db #0x4f	; 79	'O'
      008031 66                    1149 	.db #0x66	; 102	'f'
      008032 6D                    1150 	.db #0x6d	; 109	'm'
      008033 7D                    1151 	.db #0x7d	; 125
      008034 07                    1152 	.db #0x07	; 7
      008035 7F                    1153 	.db #0x7f	; 127
      008036 6F                    1154 	.db #0x6f	; 111	'o'
      008037 77                    1155 	.db #0x77	; 119	'w'
      008038 7C                    1156 	.db #0x7c	; 124
      008039 39                    1157 	.db #0x39	; 57	'9'
      00803A 5E                    1158 	.db #0x5e	; 94
      00803B 79                    1159 	.db #0x79	; 121	'y'
      00803C 71                    1160 	.db #0x71	; 113	'q'
      00803D 00                    1161 	.db #0x00	; 0
                                   1162 	.area CONST
      00803E                       1163 ___str_0:
      00803E 72 65 61 64 20 31 20  1164 	.ascii "read 1 "
      008045 0A                    1165 	.db 0x0a
      008046 0D                    1166 	.db 0x0d
      008047 00                    1167 	.db 0x00
                                   1168 	.area CODE
                                   1169 	.area CONST
      008048                       1170 ___str_1:
      008048 72 65 61 64 20 32 20  1171 	.ascii "read 2 "
      00804F 0A                    1172 	.db 0x0a
      008050 0D                    1173 	.db 0x0d
      008051 00                    1174 	.db 0x00
                                   1175 	.area CODE
                                   1176 	.area CONST
      008052                       1177 ___str_2:
      008052 75 61 72 74 20 69 6E  1178 	.ascii "uart initialised "
             69 74 69 61 6C 69 73
             65 64 20
      008063 0A                    1179 	.db 0x0a
      008064 0D                    1180 	.db 0x0d
      008065 00                    1181 	.db 0x00
                                   1182 	.area CODE
                                   1183 	.area CONST
      008066                       1184 ___str_3:
      008066 74 65 73 74 69 6E 67  1185 	.ascii "testing 0 "
             20 30 20
      008070 0A                    1186 	.db 0x0a
      008071 0D                    1187 	.db 0x0d
      008072 00                    1188 	.db 0x00
                                   1189 	.area CODE
                                   1190 	.area CONST
      008073                       1191 ___str_4:
      008073 74 65 73 74 69 6E 67  1192 	.ascii "testing 1 "
             20 31 20
      00807D 0A                    1193 	.db 0x0a
      00807E 0D                    1194 	.db 0x0d
      00807F 00                    1195 	.db 0x00
                                   1196 	.area CODE
                                   1197 	.area INITIALIZER
                                   1198 	.area CABS (ABS)
